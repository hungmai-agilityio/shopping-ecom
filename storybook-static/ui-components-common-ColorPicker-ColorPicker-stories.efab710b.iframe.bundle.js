"use strict";(self.webpackChunkshopping_ecom=self.webpackChunkshopping_ecom||[]).push([[392],{"./src/ui/components/common/ColorPicker/ColorPicker.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ColorPicker_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.2.13_@babel+core@7.26.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@14.2.13_@babel+core@7.26.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js");const colors=["White","Black","Green"];var components=__webpack_require__("./src/ui/components/index.ts");const ColorPicker_stories={component:components.sk,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{colors:{description:"List colors"},selectedColor:{description:"Color that is currently selected",control:"text"},onClick:{description:"Callback when color changes",action:"colorChanged"}}},Default={render:()=>{const[selectedColor,setSelectedColor]=(0,react.useState)(colors[0]);return(0,jsx_runtime.jsx)(components.sk,{colors,selectedColor,onClick:color=>{setSelectedColor(color)}})}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [selectedColor, setSelectedColor] = useState<string>(colors[0]);\n    const handleColorChange = (color: string) => {\n      setSelectedColor(color);\n    };\n    return <ColorPicker colors={colors} selectedColor={selectedColor} onClick={handleColorChange} />;\n  }\n}",...Default.parameters?.docs?.source}}}}}]);